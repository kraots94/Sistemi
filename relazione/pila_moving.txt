[t1, {x2,y2}, t2, {x3,y3}, t3, {x4,y4}, t2, {x3,y3}, t3, {x4,y4}]
[n1, n2, ..., nn]

{
	user = "ID_USER"
	tipo = PARTENZA_CLIENT | ARRIVO_CLIENT | COLONNINA | INIZO_PERCORSO_COLONNINA | P_INTERMEDIO | ID_USER
	t = tempo
	P_arr = nodo | (x, y)
}

ID_USER:
	se il nodo è di questo tipo, è settato il parametro user, gli altri sono a -1

MOVING:
	Dopo il tempo Ti, aggiorno GPS, riazzero il contatore dei TIC, in base al nodo invio eventuali eventi.

GPS:
 current_pos = {x1, y1}

Prima dell'aggiornamento, sistema controlla che la rimozione del nodo / arco non crea problemi
- arco non partiziona la città
- nessun cliente ha come destinazione p1
Per la rimozione del nodo, systema controlla che p1 abbia un solo arco e nessuno lo abbia come destinazione.

Aggiornamento mappa: add, remove, p1, [p2]
aggiungi o rimuovi un nodo / arco. Se p2 è definito -> arco

MOV	Movement Automa
CAR	Car Listener
ELE	Election
BAT	SENSORE_BATTERIA
APP INTERFACCIA_UTENTE
MAP GESTORE_MAPPA
ALL TUTTI_GLI_AUTOMI
ENV ENVIRONMENT
EV GENERICO MESSAGGIO PER E DA QUALCHE AUTOMA
UID Real ID Persona

''' # /* <!-- // % aggiornaMappaInterna(Nuovi_Dati)